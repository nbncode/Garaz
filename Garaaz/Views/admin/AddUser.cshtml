@model Garaaz.Models.clsRegister
@using Garaaz.Models;
@{
    ViewBag.Title = "AddUser";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<RolesData> roles = (List<RolesData>)ViewBag.Roles;
}


<script src="/scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="/scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>

<header class="ribbon">
    <h2>&nbsp;</h2>
</header>
<div class="page-content">
    <div class="container-fluid">
        @{Html.RenderPartial("alerts");}

        <div class="row">
            <div class="col-md-12">

                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h2>Add/Edit User</h2>
                    </div>
                    <div class="panel-highlight-action">
                        <a href="/admin/Users">
                            <button class="btn btn-round btn-danger btn-lg">
                                <i class="fa fa-chevron-left"></i>
                            </button>
                        </a>
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm())
                        {
                            if (Model != null && !string.IsNullOrEmpty(Model.UserId))
                            {
                                @Html.HiddenFor(model => model.UserId)
                            }
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>First Name <em>*</em></label>
                                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control required" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Last Name <em>*</em></label>
                                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control required" } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Select Role <em>*</em></label>
                                        <select name="Role" class="form-control required">
                                            <option value="">--Select--</option>
                                            @foreach (var item in roles)
                                            {
                                                var sel = Model != null && !string.IsNullOrEmpty(Model.Role) && Model.Role == item.Name ? "selected" : "";
                                                <option value="@item.Name" @sel>@item.Name</option>
                                            }
                                        </select>
                                        @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            if (Model == null || string.IsNullOrEmpty(Model.UserId))
                            {
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Login Email <em>*</em></label>
                                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control required" } })
                                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Password <em>*</em></label>
                                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control required" } })
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <button type="submit" class="btn btn-primary">Submit</button>
                        }

                    </div>
                    <!-- /.panel-body -->
                </div>
                <!-- /.panel-primary panel -->
            </div>
            <!-- /.col-md-7 -->
        </div>
    </div>
</div>